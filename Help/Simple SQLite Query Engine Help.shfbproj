<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which
         assemblies to include from solution and project documentation
         sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9d852695-c7fa-4b78-ada7-6fc349f11444}</ProjectGuid>
    <SHFBSchemaVersion>1.9.3.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual
         Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\SQLite.Dynamic.Data\bin\Debug\SQLite.Dynamic.Data.dll" />
<DocumentationSource sourceFile="..\SQLite.Dynamic.Data\bin\Debug\SQLite.Dynamic.Data.xml" /></DocumentationSources>
    <FrameworkVersion>.NET 4.0.30319</FrameworkVersion>
    <ProjectSummary>Query engine for sqlite 3. Idea inspired by SQLCE quering. Not need to object mapping and classes.</ProjectSummary>
    <CopyrightHref>beardeddev.pp.ua</CopyrightHref>
    <CopyrightText>Developed by beardeddev.pp.ua</CopyrightText>
    <FeedbackEMailAddress>devsques%40ukr.net</FeedbackEMailAddress>
    <FeedbackEMailLinkText>Email me</FeedbackEMailLinkText>
    <HelpTitle>Simple query engine for SQLite Class Library</HelpTitle>
    <RootNamespaceTitle>Simple query engine for SQLite</RootNamespaceTitle>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="(global)" isDocumented="False" />
      <NamespaceSummaryItem name="SQLite.Dynamic.Data" isDocumented="True">&lt;h3&gt;Simple query engine for SQLite 3&lt;/h3&gt;

Query engine for sqlite 3. Idea inspired by SQLCE quering. Not need to object mapping and classes.
Uses simple quering and dynamic property creation from query resul tset schema based on System.Dynamic.

Required:
- .NET 4.0
- Visual Studio 2010 Express (C#) to build from sources
- System.Data.SQLite as exturnal dependency

&lt;h3&gt;Using query engine:&lt;/h3&gt;

1. To run System.Data.SQLite on .NET 4.0 add to configuration following lines:
&lt;code&gt;
&amp;lt;startup useLegacyV2RuntimeActivationPolicy="true"&amp;gt;
    &amp;lt;supportedRuntime version="v4.0"/&amp;gt;
 &amp;lt;/startup&amp;gt;
&lt;/code&gt;
 
2. Inherit from base class passing configuration string name as parameter 
to contructor in base class as follwing:

&lt;code&gt; 
public class DemoDb : SQLite.Dynamic.Data.Database
{
        public DemoDb()
            : base("demo")
        {        
        }
}
&lt;/code&gt;

3. So configuration of app should be next:

&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8" ?&amp;gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;connectionStrings&amp;gt;
    &amp;lt;add name="demo" connectionString="Data Source=:memory:;New=True;Pooling=True;Max Pool Size=1;Journal Mode=Off;Version=3;" /&amp;gt;
  &amp;lt;/connectionStrings&amp;gt;
  &amp;lt;startup useLegacyV2RuntimeActivationPolicy="true"&amp;gt;
    &amp;lt;supportedRuntime version="v4.0"/&amp;gt;
  &amp;lt;/startup&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code&gt;

4. And enjoy with engine:

&lt;code&gt;
DemoDb db = new DemoDb();

//execute query against database
db.Execute(@"CREATE TABLE dictionary(
                           id INTEGER PRIMARY KEY AUTOINCREMENT,
                           title VARCHAR(256),
                           description TEXT
                        )
                        ;");

            Console.WriteLine("Table created");

//inserting data to database
int affectedRows = db.Execute("INSERT INTO dictionary(title, description) VALUES(@0, @1)", 
                                                           "Java", 
                                                           @"Java is a programming language originally developed by 
                                                           James Gosling at Sun Microsystems (which is now a subsidiary 
                                                           of Oracle Corporation) and released in 1995 as a core component 
                                                           of Sun Microsystems' Java platform. The language derives much of 
                                                           its syntax from C and C++ but has a simpler object model and fewer 
                                                           low-level facilities.");

//quering data from database
var res = db.Query("SELECT * FROM dictionary");
            
foreach (var r in res)
{
     Console.WriteLine("{0}\t{1}\t...", r.id, r.title);
}
&lt;/code&gt;</NamespaceSummaryItem>
    </NamespaceSummaries>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in
       order for Visual Studio to perform the build.  The others are optional
       common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>